
subprojects {
    apply plugin: 'java'
    apply plugin: 'osgi-ipojo'
    apply plugin: 'license'

    sourceCompatibility = 1.8

    version = '1.2.0'
    //version += '-SNAPSHOT'
    group = 'de.interactive_instruments'

    license {
        header rootProject.file('gradle/license-header')
        strictCheck true
        excludes([
                "**/*.mustache",
                "**/*.png",
                "**/*.ico",
                "**/*.xcf",
                "**/template.html",
                "**/*.json"])
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.name = "interactive instruments GmbH"

        //ext.name = "European Union, interactive instruments GmbH"
        //includes([
        excludes([
            "**/LdProxyAdminServiceResource.java",
            "**/CatalogResource.java",
            "**/LdProxyServiceResource.java",
            "**/AbstractFeatureWriter.java",
            "**/GeoJsonFeatureWriter.java",
            "**/GeoJsonOnTheFlyMapping.java",
            "**/GetCapabilities2Dataset.java",
            "**/MicrodataFeatureWriter.java",
            "**/JsonLdOnTheFlyMapping.java",
            "**/JsonLdOutputWriter.java",
            "**/IndexValueWriter.java",
            "**/LdProxyModule.java",
            "**/LdProxyService.java",
            "**/LdProxyServiceSerializer.java",
            "**/LdProxyServiceStore.java",
            "**/LdProxyServiceStoreDefault.java"
        ])
    }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/iide/maven"
        }
        //mavenLocal()
        maven {
            url "http://maven.forgerock.org/repo/repo"
        }
    }

    configurations {
        embedded
        provided
        compile.extendsFrom embedded
        compile.extendsFrom provided
    }

    dependencies {
        // TODO: get from root project, at least the versions
        provided group: 'de.interactive_instruments', name: 'xtraplatform-bundles-runtime', version: '1.1.3'
        // TODO: shouldn't we only be allowed to use api bundles here?
        provided group: 'de.interactive_instruments', name: 'xtraplatform-bundles-core', version: '1.1.5'
        provided group: 'de.interactive_instruments', name: 'xtraplatform-sdi-tools', version: '1.1.10'

        // TODO: this is in bundles-runtime, but with transitive=false
        // TODO: we need the transitive dependencies in provided
        provided group: 'de.interactive_instruments', name: 'xtraplatform-dropwizard', version: '1.1.3'
    }

    jar {
        manifest {
            attributes("Implementation-Title": project.name, "Implementation-Version": project.version)

            instruction '-removeheaders', 'Bnd-LastModified'
            instructionReplace "Bundle-SymbolicName",project.name.replaceAll('-', '.')

            instruction 'Import-Package', 'com.fasterxml.jackson.module.afterburner.ser'
            instruction 'Import-Package', '*'
            instruction 'Private-Package', 'de.ii.empty'
        }
    }
    afterEvaluate {
        task hotDeploy(type: Copy) {
            dependsOn jar
            from jar
            into new File(rootProject.tasks.installDist.destinationDir, 'bundles/platform')
        }
    }
}
